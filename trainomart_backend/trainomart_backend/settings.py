"""
Django settings for trainomart_backend project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from decouple import config
from corsheaders.defaults import default_headers 

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', default='django-insecure-o_gpi0!&txks(kp1=ubaen4-=)bn_t(=vv0qa5lsf4_x+%eyco')

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = config('DEBUG', default=True, cast=bool)
DEBUG = False  

#AUTH_USER_MODEL = 'traino.SignUp'  # Replace 'traino' with your actual app name


ALLOWED_HOSTS = [
    '*',
    'test.trainomart.com',
    'localhost',
    '*.vercel.app',
    '43.204.214.252',
    'trainomart-frontend-latest.vercel.app',
    'ec2-43-204-214-252.ap-south-1.compute.amazonaws.com',
    "https://www.trainomart.com"
]

if DEBUG:
    ALLOWED_HOSTS += ['localhost', '127.0.0.1']

CORS_ALLOW_ALL_ORIGINS = False  # ❌ Don't allow all origins (Security risk)
CORS_ALLOWED_ORIGINS = [
    "https://www.trainomart.com",
    "https://test.trainomart.com",
    "http://localhost:3000",  # ✅ Add local dev server if needed
]

CSRF_TRUSTED_ORIGINS = [
    "https://www.trainomart.com",  # ✅ Allow CSRF requests from frontend
    "https://test.trainomart.com",
    "http://localhost:3000",
]


#CSRF_TRUSTED_ORIGINS = ['https://test.trainomart.com']
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
USE_X_FORWARDED_HOST = True
USE_X_FORWARDED_PORT = True
SESSION_COOKIE_SECURE = True
SECURE_SSL_REDIRECT = True
SESSION_COOKIE_SAMESITE = "None"

CSRF_COOKIE_SECURE = True
CSRF_COOKIE_HTTPONLY = False  # ✅ Allow frontend access to CSRF token
CSRF_COOKIE_SAMESITE = "None" 

# Application definition
INSTALLED_APPS = [
    'traino',
    'rest_framework',
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

# Middleware
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # Ensure CORS is high in the middleware list
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'trainomart_backend.urls'


AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # Default authentication backend
]


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ]
}
	


# Templates
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],  # Add if you have templates
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',  # Required by admin
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'trainomart_backend.wsgi.application'


# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'trainomart_db',          # Your database name
        'USER': 'admin',                  # Your PostgreSQL username
        'PASSWORD': 'root',                # Your PostgreSQL password
        'HOST': 'localhost',              # Set to 'localhost' if the database is on the same instance
        'PORT': '5432',                   # Default PostgreSQL port
    }
}

#AUTH_USER_MODEL = 'traino.CustomUser'
#AUTH_USER_MODEL = 'traino.CustomUser'



# Password validation

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# CORS settings
#CORS_ALLOWED_ORIGINS = [
#    "*",
#    "www.trainomart.com",
#    "http://localhost:3000",
#    "http://localhost:8000",
#    "https://trainomart-frontend-latest.vercel.app",
#    "https://trainomart-backend.vercel.app",
#    "https://trainomart-backend.now.sh",
#    "https://trainomart-frontend.vercel.app",
#]

#CORS_ALLOW_ALL_ORIGINS = True  # Set to True only for development

CORS_ORIGIN_ALLOW_ALL = True

# Optional: Allow credentials to be included in cross-origin requests
CORS_ALLOW_CREDENTIALS = True

# Optional: Specify allowed methods if using methods beyond GET, POST
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

# Optional: Specify allowed headers if using custom headers
CORS_ALLOW_HEADERS = list(default_headers) + [
    'contenttype',
    # Add any other custom headers here
]

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Wise API Token (if needed)
WISE_API_TOKEN = config('WISE_API_TOKEN', default='your-wise-api-token')

# Additional configurations...
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
        },
    },
}

